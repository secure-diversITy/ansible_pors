---
####################################################################################################################
#
# ALL OUTCOMMENTED KEY:VALUES (IF ANY) YOU SEE HERE ARE THE DEFINED DEFAULT VALUES
# i.e. there is no need to enable them if you like the shown default value
#
####################################################################################################################

######################################################
#
# Configuring GIT access
#
######################################################

# define the git server access.
# Highly depends on your git server type.
# checkout the documentation first - it might be not what you expect!
# e.g.:
# https://api.github.com/orgs/secure-diversITy
# https://gitlab.com/api
# https://gitlab.e.foundation/api
#git_server:

# the group/org/project name of where apps are stored
#git_uri_group:

# the pors repository itself (here /opt/pors_data/ get pushed to)
#git_uri_repo_pors_data:

# enable or disable filterin apps from the git repo
use_git_apps_filter: true

# regex filter for app names (only these will be shown durin link app process
#git_apps_filter: "<some regex>"

# define a type for that git server
# Possible values: gitlab | github
#git_server_type:

# gitlab only:
# specify the group name where all "projects" (aka git repos)
# are stored.
# This group name must be URL-encoded, e.g a "/" is represented by %2F
#gitlab_groupname: "e%2Fos"

# define the git access type.
# API access will be done by https always (see above git_server)
# but PORS will access later any selected app repo based on the
# following definition (e.g. git clone/pull ...).
# note: PORS fetches the actual repo location fully automatic
# so http means either http or https - whatever has been defined
# on the git_server.
# If you plan to use ssh here the user defined in
# remote_system.local_gituser must have its public key allowed in
# all repos of that github organization. Note: you still need a
# personal access token for the above git_server
# Possible values: http | ssh (recommended: http)
#git_access_type: http

# PORS detects & uses the default branch which has been set in your
# git repo. if you want to overwrite this branch detection specify
# an override here but beware it will affect ALL repo's:
#git_default_branch_override: "your-branch-name"

# some repositories requires authentication even for
# git clone/pull (e.g. private repos). here you define
# the username for that. When deploying apps PORS connects
# to the target system and executes a:
# git clone/pull <local_gituser>@<git_server>
#remote_system:
#    local_gituser: git

# PORS supports only token based authentication for accessing git
# the user here does not need write access
#tokenauth:
#    git_ro_user: "{{ vault_git_ro_user }}"
#    git_ro_token: "{{ vault_git_ro_token }}"

