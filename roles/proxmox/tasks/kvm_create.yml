---
- name: Check for existing VM
  community.general.proxmox_kvm:
    proxmox_default_behavior: compatibility
    node: "{{ proxmox.node[px_var].name }}"
    api_user: "{{ proxmox.node[px_var].api_user }}"
    api_token_id: "{{ proxmox.node[px_var].api_token_id }}"
    api_token_secret: "{{ proxmox.node[px_var].api_token_secret }}"
    api_host: "{{ proxmox.node[px_var].api_host }}"
    name: "{{ item }}"
    state: current
  register: vm
  failed_when: vm.status is defined
  loop: "{{ server_hostname }}"

- name: generate VM {{ server_shortname }} tasks
  template:
    src: create_kvm.j2
    dest: "{{ base_install_dir }}/roles/proxmox/tasks/generated_create_vm.yml"
  connection: local
  loop: "{{ disks }}"

#########################################################################
# The Proxmox ansible modules do not offer to attach disks to an already
# running instance.
# the following tasks file gets auto-generated by the above template:
#########################################################################

- include_tasks: "{{ base_install_dir }}/roles/proxmox/tasks/generated_create_vm.yml"
  when:
    - vm.status is undefined

- name: give PVE enough time to write the config
  pause:
    seconds: 10
